@startuml
actor Utente
participant GameController
participant GameService
database Database as DB
participant View
activate Utente

Utente -> View : Seleziona DifficoltÃ¡
activate View
GameController -> GameController : onDifficultySelected()
activate GameController
GameController -> GameService : init(difficulty)
activate GameService
GameController -> View : loadPane(readingPane)
deactivate GameService
activate GameController #3375E0
GameController -> GameController : readingSetupServiceFX()
activate GameController #3375E0
GameController -> GameService : setupReadingPhase()
activate GameService
GameService -> GameService : preparazione documenti scelti
GameService --> GameController : Map<Document,String>
deactivate GameService
GameController -> GameController : questionSetupServiceFX()
activate GameController #3375E0
GameController -> GameService : getQuestions()
activate GameService #3375E0
GameService -> GameService : generazione domande
GameService --> GameController : lista domande
deactivate GameController
deactivate GameService
deactivate GameController
GameController -> View : loadPane(questionPane)
deactivate GameController
loop for each question
    GameController -> View : showQuestion()
end

activate GameController #3375E0
GameController -> View : loadPane(reportPane)
GameController -> GameController: generateReport()
GameController -> GameService : saveGameReport()
activate GameController #3375E0
activate GameService
deactivate GameController
GameService -> DB : insert()
activate DB
deactivate GameService
deactivate DB

@enduml
